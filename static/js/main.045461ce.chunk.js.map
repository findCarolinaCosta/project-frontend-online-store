{"version":3,"sources":["services/api.js","components/Categories.jsx","services/cart.js","components/ProductCard.jsx","pages/Home.js","components/CartCard.jsx","pages/ShoppingCart.js","components/Reating.jsx","components/SavedAssessments.jsx","components/Evaluation.jsx","pages/DetailedProductView.js","pages/CheckoutPage.js","App.js","serviceWorker.js","index.js"],"names":["getCategories","a","fetch","response","json","data","getProductsFromCategoryAndQuery","categoryId","query","Categories","state","categories","this","setCategoriesInState","setState","categoryChange","props","className","map","category","key","id","htmlFor","data-testid","type","name","value","onChange","React","Component","sendItemsToCloud","productId","cloudProductsIds","localStorage","getItem","productsIds","JSON","parse","push","stringProducts","stringify","setItem","getItemsFromCloud","ProductCard","sendToCart","thumbnail","title","price","shipping","to","src","alt","onClick","Home","target","handleSearch","onInputChange","inputSearch","products","productsList","showResults","handleProducts","results","length","product","category_id","free_shipping","role","aria-label","event","preventDefault","CartCard","totalAmount","quantityOfProduct","changeTotalPrice","total","Number","totalValue","decreaseCartQuantity","prevState","increaseCartQuantity","maxQuantity","emptyCart","cloudProdutsList","filtredList","filter","removeProduct","window","location","reload","quantityOfThis","ShoppingCart","handleCloudIds","productIds","handleItemsDetails","sumTotalPrice","sum","productsToSum","reduce","acc","item","finalPrice","attList","productsDetails","forEach","allProducts","find","details","handleCartList","available_quantity","Rating","maxRating","defaultValue","setRating","ratingArray","i","rating","parseInt","checked","SavedAssessments","match","savedAssessments","savedAssessment","params","index","email","evaluation","withRouter","Evaluation","unshift","placeholder","selectedRating","saveEvaluation","DetailedProductView","handleAPI","detail","availableQuantity","condition","CheckoutPage","getId","elem","App","basename","process","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qWAAO,SAAeA,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEAEkBC,MAAM,qDAFxB,cAECC,EAFD,gBAGcA,EAASC,OAHvB,cAGCC,EAHD,yBAKEA,GALF,4C,sBAQA,SAAeC,EAAtB,oC,4CAAO,WAA+CC,EAAYC,GAA3D,yBAAAP,EAAA,0DAEDM,IAAcC,EAFb,gCAGoBN,MAAM,0DAAD,OAA2DK,EAA3D,cAA2EC,IAHpG,cAGGL,EAHH,OAIGE,EAAOF,EAASC,OAJnB,kBAMIC,GANJ,WASDG,EATC,iCAUoBN,MAAM,mDAAD,OAAoDM,IAV7E,cAUGL,EAVH,OAWGE,EAAOF,EAASC,OAXnB,kBAaIC,GAbJ,yBAgBkBH,MAAM,0DAAD,OAA2DK,IAhBlF,eAgBCJ,EAhBD,OAiBCE,EAAOF,EAASC,OAjBjB,kBAmBEC,GAnBF,6C,0BC+CQI,E,kDAlDb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,WAAY,IAJF,E,4FAQd,4BAAAV,EAAA,sEAC2BD,IAD3B,OACQW,EADR,OAEEC,KAAKC,qBAAqBF,GAF5B,gD,wFAKA,SAAqBA,GACnBC,KAAKE,SAAS,CAAEH,iB,oBAGlB,WACE,IAAQA,EAAeC,KAAKF,MAApBC,WACAI,EAAmBH,KAAKI,MAAxBD,eAER,OACE,yBAAKE,UAAU,cACb,6CAEEN,EAAWO,KAAI,SAACC,GAAD,OACb,yBAAKC,IAAMD,EAASE,GAAKJ,UAAU,mBACjC,2BAAOK,QAAUH,EAASE,GAAKE,cAAY,YACzC,2BACEC,KAAK,QACLC,KAAK,WACLJ,GAAKF,EAASE,GACdK,MAAQP,EAASE,GACjBM,SAAWZ,IANf,OASII,EAASM,e,GArCFG,IAAMC,WCHxB,SAASC,EAAiBC,EAAWxB,GAC1C,IAAMyB,EAAmBC,aAAaC,QAAQ,WAC1CC,EAAc,GAEdH,IACFG,EAAcC,KAAKC,MAAML,IAG3BG,EAAYG,KAAK,CAAEP,YAAWxB,eAC9B,IAAMgC,EAAiBH,KAAKI,UAAUL,GAEtCF,aAAaQ,QAAQ,UAAWF,GAI3B,SAASG,IACd,IAAMV,EAAmBC,aAAaC,QAAQ,WAE9C,OAAIF,EACKI,KAAKC,MAAML,GAGb,G,IC6CMW,E,4MA7DbC,WAAa,WACX,MAGI,EAAK5B,MACTc,EAJA,EACEC,UADF,EAEExB,a,4CAKJ,WACE,MAOIK,KAAKI,MANP6B,EADF,EACEA,UACAd,EAFF,EAEEA,UACAxB,EAHF,EAGEA,WACAuC,EAJF,EAIEA,MACAC,EALF,EAKEA,MACAC,EANF,EAMEA,SAGF,OACE,oCACE,kBAAC,IAAD,CACEC,GAAE,+BAA2B1C,EAA3B,YAAyCwB,GAC3CR,cAAY,uBAEVyB,GACA,0BAAMzB,cAAY,iBAAlB,oBAIF,yBACE2B,IAAML,EACNM,IAAMpB,IAER,8BACGe,GAEH,2CACSC,KAGX,4BACEvB,KAAK,SACL4B,QAAUxC,KAAKgC,WACfrB,cAAY,uBAHd,kB,GAzCkBK,IAAMC,WC8GjBwB,E,kDA7Gb,aAAe,IAAD,8BACZ,gBAUFtC,eAAiB,YAAiB,IAAduC,EAAa,EAAbA,OAClB,EAAKxC,SAAS,CACZK,SAAUmC,EAAO5B,OAChB,EAAK6B,eAdI,EAiBdC,cAAgB,YAAiB,IAAdF,EAAa,EAAbA,OACjB,EAAKxC,SAAS,CAAE2C,YAAaH,EAAO5B,SAlBxB,EAsBd6B,aAtBc,sBAsBC,kCAAAtD,EAAA,+DACqB,EAAKS,MAA/B+C,EADK,EACLA,YAAatC,EADR,EACQA,SADR,SAGbb,EAAgCa,EAAUsC,GAH7B,OAEPC,EAFO,OAKb,EAAK5C,SAAS,CACZ6C,aAAcD,EACdE,aAAa,IAPF,2CAtBD,EAkCdC,eAAiB,WACf,IACQC,EADiB,EAAKpD,MAAtBiD,aACAG,QAER,OAAuB,IAAnBA,EAAQC,OACH,+DAGFD,EAAQ5C,KAAI,SAAC8C,GAAD,OACjB,yBACE5C,IAAM4C,EAAQ3C,GACdE,cAAY,WAEZ,kBAAC,EAAD,CACEsB,UAAYmB,EAAQnB,UACpBd,UAAYiC,EAAQ3C,GACpBd,WAAayD,EAAQC,YACrBnB,MAAQkB,EAAQlB,MAChBC,MAAQiB,EAAQjB,MAChBC,SAAWgB,EAAQhB,SAASkB,qBAlDlC,EAAKxD,MAAQ,CACXiD,aAAc,GACdF,YAAa,GACbG,aAAa,EACbzC,SAAU,IAPA,E,0CA2Dd,WAAU,IAAD,OACP,EAGIP,KAAKF,MAFP+C,EADF,EACEA,YACAG,EAFF,EAEEA,YAGF,OACE,yBAAK3C,UAAU,eACb,kBAAC,EAAD,CACEF,eAAiBH,KAAKG,iBAGxB,6BACE,yBAAKE,UAAU,iBACb,kBAAC,IAAD,CAAMA,UAAU,OAAOM,cAAY,uBAAuB0B,GAAG,iBAA7D,sBAEE,0BAAMkB,KAAK,MAAMC,aAAW,uBAA5B,kBAGJ,uBAAG7C,cAAY,wBAAf,4DAGA,0BAAMN,UAAU,UACd,2BACEA,UAAU,eACVO,KAAK,OACLD,cAAY,cACZG,MAAQ+B,EACR9B,SAAWf,KAAK4C,gBAElB,4BACEvC,UAAU,gBACVO,KAAK,SACLD,cAAY,eACZ6B,QAAU,SAACiB,GACTA,EAAMC,iBACN,EAAKf,iBAGP,0BAAMY,KAAK,MAAMC,aAAW,aAA5B,kBAIHR,GAAehD,KAAKiD,uB,GAvGZjC,IAAMC,WC0HV0C,E,kDA3Hb,WAAYvD,GAAQ,IAAD,8BACjB,cAAMA,IAWRwD,YAAc,WACZ,IAAQC,EAAsB,EAAK/D,MAA3B+D,kBACR,EAII,EAAKzD,MAHP+B,EADF,EACEA,MACA1B,EAFF,EAEEA,GACAqD,EAHF,EAGEA,iBAGIC,EAAQ5B,EAAQ6B,OAAOH,GAE7B,EAAK3D,SAAS,CACZ+D,WAAYF,IACX,WAAQD,EAAiBrD,EAAIsD,OAxBf,EA2BnBG,qBAAuB,WACS,EAAKpE,MAA3B+D,kBAEgB,GACtB,EAAK3D,SAAS,CAAE2D,kBAAmB,IAGrC,EAAK3D,UAAS,SAACiE,GAAD,MAAgB,CAC5BN,kBAAmBM,EAAUN,kBAAoB,KAC/C,EAAKD,cApCQ,EAuCnBQ,qBAAuB,WACrB,IAAQC,EAAgB,EAAKjE,MAArBiE,YACsB,EAAKvE,MAA3B+D,kBACgB,GAAKQ,GAC3B,EAAKnE,UAAS,SAACiE,GAAD,MAAgB,CAC5BN,kBAAmBM,EAAUN,kBAAoB,KAC/C,EAAKD,cA7CM,EAiDnBU,UAAY,YH5BP,SAAuB7D,GAC5B,IAAM8D,EAAmBlD,aAAaC,QAAQ,WAGxCkD,EAFchD,KAAKC,MAAM8C,GAECE,QAAO,qBAAGtD,YAA8BV,KAExEY,aAAaQ,QAAQ,UAAWL,KAAKI,UAAU4C,IG0B7CE,CADI,EAAKtE,MADPK,IAGFkE,OAAOC,SAASC,UApDhB,EAAK/E,MAAQ,CACXmE,WAAY,EACZJ,kBAAmBzD,EAAM0E,gBAJV,E,qDAQnB,WACE9E,KAAK4D,gB,oBAgDP,WACE,MAGI5D,KAAKI,MAFP8B,EADF,EACEA,MACAC,EAFF,EAEEA,MAGF,EAGInC,KAAKF,MAFP+D,EADF,EACEA,kBACAI,EAFF,EAEEA,WAGF,OACE,6BACE,6BACE,0BAAMtD,cAAY,8BACfuB,GAEH,8BACGC,IAGL,6BACE,4BACExB,cAAY,4BACZC,KAAK,SACL4B,QAAUxC,KAAKkE,sBAHjB,KAOA,0BACEvD,cAAY,kCAEVkD,GAEJ,4BACElD,cAAY,4BACZC,KAAK,SACL4B,QAAUxC,KAAKoE,sBAHjB,KAOA,4BACExD,KAAK,SACL4B,QAAUxC,KAAKsE,WAFjB,KAMA,6BAEIL,S,GA3GShD,aC4IR8D,E,kDAxIb,aAAe,IAAD,8BACZ,gBAeFC,eAAiB,WACf,EAAK9E,SAAS,CACZ+E,WAAYnD,IACZkB,aAAa,GACZ,EAAKkC,qBApBI,EAwBdC,cAAgB,WACd,IAEMC,EAFoB,EAAKtF,MAAvBuF,cAEkBC,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAK1E,QAAO,GAElE,EAAKZ,SAAS,CAAEuF,WAAYL,KA7BhB,EAgCdtB,iBAAmB,SAACrD,EAAIK,GACtB,IAEM4E,EAFoB,EAAK5F,MAAvBuF,cAEsBZ,QAAO,SAACrB,GAAD,OAAaA,EAAQ3C,KAAOA,KACjEiF,EAAQhE,KAAK,CAAEjB,KAAIK,UAEnB,EAAKZ,SAAS,CACZmF,cAAeK,GACd,EAAKP,gBAxCI,EA2CdD,mBAAqB,WACnB,MAII,EAAKpF,MAHPmF,EADF,EACEA,WACAU,EAFF,EAEEA,gBACAN,EAHF,EAGEA,cAGFJ,EAAWW,QAAX,uCAAmB,qCAAAvG,EAAA,6DAAS8B,EAAT,EAASA,UAAWxB,EAApB,EAAoBA,WAApB,SACSD,EAAgCC,GADzC,OACXkG,EADW,OAEXzC,EAAUyC,EAAY3C,QAAQ4C,MAAK,qBAAGrF,KAAgBU,KACtD4E,EAAU,CACdtF,GAAI2C,EAAQ3C,GACZK,MAAOsC,EAAQjB,OAGjBkD,EAAc3D,KAAKqE,GACnBJ,EAAgBjE,KAAK0B,GACrBA,EAAQ0B,eAAiB,EAEzB,EAAK5E,SAAS,CACZyF,kBACAN,iBACC,EAAKF,eAfS,4CAAnB,wDAlDY,EAqEda,eAAiB,WACf,MAII,EAAKlG,MAHPmF,EADF,EACEA,WACAU,EAFF,EAEEA,gBACAF,EAHF,EAGEA,WAGF,OAA0B,IAAtBR,EAAW9B,OAEX,uBAAGxC,cAAY,+BAAf,8BAOF,oCACE,6BACE,8BACGgF,EAAgBxC,QAElBwC,EAAgBrF,KAAI,SAAC8C,GACpB,IACE3C,EAIE2C,EAJF3C,GACAyB,EAGEkB,EAHFlB,MACAC,EAEEiB,EAFFjB,MACA2C,EACE1B,EADF0B,eAGF,OACE,kBAAC,EAAD,CACEtE,IAAMC,EACNA,GAAKA,EACLyB,MAAQA,EACRC,MAAQA,EACR2C,eAAiBA,EACjBT,YAAcjB,EAAQ6C,mBACtBnC,iBAAmB,EAAKA,sBAK9B,sDACC2B,GAEH,kBAAC,IAAD,CAAMpD,GAAG,+BACP,4BAAQ1B,cAAY,oBAAoBC,KAAK,UAA7C,uBAhHN,EAAKd,MAAQ,CACXmF,WAAY,GACZU,gBAAiB,GACjBN,cAAe,GACfrC,aAAa,EACbyC,WAAY,GARF,E,qDAYd,WACEzF,KAAKgF,mB,oBA8GP,WACE,IACEhC,EACEhD,KAAKF,MADPkD,YAGF,OACE,6BACIA,GAAgBhD,KAAKgG,sB,GAnIJ/E,aCqCZiF,E,4JAxCb,WAIE,IAHA,MAA+ClG,KAAKI,MAA5C+F,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,UAC3BC,EAAc,GAEXC,EAAI,EAAGA,EAAIJ,EAAWI,GAAK,EAClCD,EAAY5E,KAAK6E,EAAI,GAGvB,OACE,6BAEID,EAAYhG,KAAI,SAACkG,GAAD,OACd,2BAAOhG,IAAMgG,EAAS9F,QAAU8F,EAASnG,UAAU,eACjD,2BACEI,GAAK+F,EACLnG,UAAU,eACVO,KAAK,QACLC,KAAK,SACLE,SAAW,SAAC0C,GACV4C,EAAUI,SAAShD,EAAMf,OAAO5B,MAAO,MAEzC4F,QAAUN,IAAiBI,EAC3B1F,MAAQ0F,IAVZ,OAaGA,W,GA1BMxF,IAAMC,WCCrB0F,E,4JACJ,WACE,IAAQC,EAAU5G,KAAKI,MAAfwG,MACFC,GAAoBrF,KAAKC,MAAMJ,aAAaC,QAAQ,sBAAwB,IAC/EmD,QAAO,SAACqC,GAAD,OAAqBA,EAAgBrG,KAAOmG,EAAMG,OAAOtG,MAEnE,OACE,6BAEIoG,EAAiBvG,KAAI,SAACwG,EAAiBE,GAAlB,OACnB,yBAAKxG,IAAMwG,EAAQ3G,UAAU,qBAC3B,6BACE,0CACA,8BAAOyG,EAAgBG,QAEzB,6BACE,wCACA,8BAAOH,EAAgBN,SAEzB,6BACE,mDACA,8BAAOM,EAAgBI,sB,GArBRlG,IAAMC,WAuCtBkG,cAAWR,GCrCpBS,E,kDACJ,aAAe,IAAD,8BACZ,gBAEKtH,MAAQ,CACXmH,MAAO,GACPT,OAAQ,EACRU,WAAY,IANF,E,kDAUd,WACE,MAIIlH,KAAKF,MAHPmH,EADF,EACEA,MACAT,EAFF,EAEEA,OACAU,EAHF,EAGEA,WAEMN,EAAU5G,KAAKI,MAAfwG,MAEFC,EAAmBrF,KAAKC,MAAMJ,aAAaC,QAAQ,sBAAwB,GACjFuF,EAAiBQ,QAAQ,CAAE5G,GAAImG,EAAMG,OAAOtG,GAAIwG,QAAOT,SAAQU,eAC/D7F,aAAaQ,QAAQ,mBAAoBL,KAAKI,UAAUiF,IACxD7G,KAAKE,SAAS,CACZ+G,MAAO,GACPT,OAAQ,EACRU,WAAY,O,oBAIhB,WAAU,IAAD,OACP,EAIIlH,KAAKF,MAHPmH,EADF,EACEA,MACAT,EAFF,EAEEA,OACAU,EAHF,EAGEA,WAGF,OACE,6BACE,gDACA,6BACA,0BAAM7G,UAAU,kBACd,2BACEU,SAAW,SAAC0C,GACV,EAAKvD,SAAS,CACZ+G,MAAOxD,EAAMf,OAAO5B,SAGxBA,MAAQmG,EACR5G,UAAU,gBACVO,KAAK,QACL0G,YAAY,sBAEd,6BACA,6BACA,kBAAC,EAAD,CACEnB,UAAY,EACZC,aAAeI,EACfH,UAAY,SAACkB,GACX,EAAKrH,SAAS,CAAEsG,OAAQe,OAG5B,6BACA,8BACExG,SAAW,SAAC0C,GACV,EAAKvD,SAAS,CACZgH,WAAYzD,EAAMf,OAAO5B,SAG7BA,MAAQoG,EACR7G,UAAU,gBACVM,cAAY,8BAEd,6BACA,6BACA,yBAAKN,UAAU,iBACb,4BACEO,KAAK,SACLP,UAAU,MACVmC,QAAU,SAACiB,GACTA,EAAMC,iBACN,EAAK8D,mBALT,4BAcJ,kBAAC,EAAD,W,GAzFiBxG,IAAMC,WAuGhBkG,cAAWC,GCCXK,E,kDAtGb,aAAe,IAAD,8BACZ,gBAkBFC,UAnBc,uCAmBF,WAAO/H,EAAYc,GAAnB,iBAAApB,EAAA,sEACWK,EAAgCC,GAD3C,OACJgI,EADI,OAEJvE,EAAUuE,EAAOzE,QAAQ4C,MAAK,SAACN,GAAD,OAAUA,EAAK/E,KAAOA,KAC1D,EAAKP,SAAS,CACZgC,MAAOkB,EAAQlB,MACfD,UAAWmB,EAAQnB,UACnBE,MAAOiB,EAAQjB,MACfyF,kBAAmBxE,EAAQ6C,mBAC3B4B,UAAWzE,EAAQyE,UACnBzF,SAAUgB,EAAQhB,SAASkB,cAC3B3D,aACAc,OAXQ,2CAnBE,0DAkCduB,WAAa,WACX,MAA2B,EAAKlC,MAAxBH,EAAR,EAAQA,WAERuB,EAFA,EAAoBT,GAECd,IAnCrB,EAAKG,MAAQ,CACXoC,MAAO,GACPD,UAAW,GACXE,MAAO,EACPyF,kBAAmB,EACnBC,UAAW,GACXlI,WAAY,GACZc,GAAI,GACJ2B,UAAU,GAVA,E,qDAcd,WACE,MAAkDpC,KAAKI,MAA/CwG,MAASG,OAAUtG,EAA3B,EAA2BA,GAAId,EAA/B,EAA+BA,WAC/BK,KAAK0H,UAAU/H,EAAYc,K,oBAwB7B,WACE,MAOIT,KAAKF,MANPoC,EADF,EACEA,MACAD,EAFF,EAEEA,UACAE,EAHF,EAGEA,MACAyF,EAJF,EAIEA,kBACAC,EALF,EAKEA,UACAzF,EANF,EAMEA,SAGF,OACE,yBAAK/B,UAAU,QACb,wBAAIM,cAAY,uBAAuBuB,GACvC,6BACE,kBAAC,IAAD,CAAM7B,UAAU,OAAOM,cAAY,uBAAuB0B,GAAG,iBAA7D,sBAEE,0BAAMkB,KAAK,MAAMC,aAAW,uBAA5B,iBAEApB,GACA,0BAAMzB,cAAY,iBAAlB,oBAIF,yBAAK2B,IAAML,EAAYM,IAAML,IAC7B,yCAAWC,IACX,sDACA,+DAC6ByF,GAD7B,iDAG2BC,IAG3B,6BACA,6BAEA,4BACEjH,KAAK,SACLD,cAAY,6BACZ6B,QAAUxC,KAAKgC,YAHjB,yBAQA,6BACA,6BAEA,kBAAC,EAAD,Y,GAvFwBf,aCqHnB6G,G,wDAtHb,aAAe,IAAD,8BACZ,gBAaFC,MAdc,sBAcN,sBAAA1I,EAAA,sEACmByC,IADnB,cAEK2C,OAAX,uCAAkB,WAAOe,GAAP,iBAAAnG,EAAA,sEACKK,EAAgC8F,EAAK7F,YAD1C,OACVgI,EADU,OAEVvE,EAAUuE,EAAOzE,QAAQ4C,MAAK,SAACkC,GAAD,OAAUA,EAAKvH,KAAO+E,EAAKrE,aAC/D,EAAKjB,SAAS,CACZgC,MAAOkB,EAAQlB,MACfD,UAAWmB,EAAQnB,UACnBE,MAAOiB,EAAQjB,MACf1B,GAAI+E,EAAKrE,YAPK,2CAAlB,uDAFM,2CAZN,EAAKrB,MAAQ,CACXoC,MAAO,GACPD,UAAW,GACXE,MAAO,EACP1B,GAAI,IANM,E,qDAUd,WACET,KAAK+H,U,oBAiBP,WACE,MAKI/H,KAAKF,MAJPoC,EADF,EACEA,MACAD,EAFF,EAEEA,UACAE,EAHF,EAGEA,MACA1B,EAJF,EAIEA,GAEF,OACE,0BAAMJ,UAAU,aACd,kCACE,oDACA,6BAASA,UAAU,mBACjB,yBACEiC,IAAML,EACNM,IAAM9B,IAER,8BACGyB,GAEH,2CACSC,MAIb,8BAAU9B,UAAU,iBAClB,6BAASA,UAAU,aACjB,2BAAOK,QAAQ,YAAf,QAEE,2BACED,GAAG,WACHG,KAAK,OACLD,cAAY,uBAIhB,2BAAOD,QAAQ,SAAf,SAEE,2BACED,GAAG,QACHG,KAAK,QACLD,cAAY,oBAIhB,2BAAOD,QAAQ,OAAf,OAEE,2BACED,GAAG,MACHG,KAAK,OACLD,cAAY,kBAIhB,2BAAOD,QAAQ,SAAf,gBAEE,2BACED,GAAG,QACHG,KAAK,OACLD,cAAY,oBAIhB,2BAAOD,QAAQ,OAAf,OAEE,2BACED,GAAG,MACHG,KAAK,OACLD,cAAY,kBAIhB,2BAAOD,QAAQ,WAAf,WAEE,2BACED,GAAG,UACHG,KAAK,OACLD,cAAY,uBAKlB,4BAAQC,KAAK,UAAb,mB,GA9GiBK,cCsBZgH,E,4JAlBb,WACE,OACE,kBAAC,IAAD,CAAeC,SAAWC,kCACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,OAAK,EACLC,KAAK,uCACLC,UAAYb,IAEd,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,gBAAgBC,UAAYvD,IAC9C,kBAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,IAAIC,UAAY7F,IAClC,kBAAC,IAAD,CAAO2F,OAAK,EAACC,KAAK,8BAA8BC,UAAYR,U,GAZpD9G,IAAMC,WCIJsH,QACW,cAA7B5D,OAAOC,SAAS4D,UAEkB,UAA7B7D,OAAOC,SAAS4D,UAEhB7D,OAAOC,SAAS4D,SAAS5B,MAC1B,2DCZN6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.045461ce.chunk.js","sourcesContent":["export async function getCategories() {\n  // Implemente aqui\n  const response = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const data = await response.json();\n\n  return data;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  // Implemente aqui! Quando o fizer, descomente os parâmetros que essa função recebe\n  if (categoryId && query) {\n    const response = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n    const data = response.json();\n\n    return data;\n  }\n\n  if (query) {\n    const response = await fetch(`https://api.mercadolibre.com/sites/MLB/search?q=${query}`);\n    const data = response.json();\n\n    return data;\n  }\n\n  const response = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}`);\n  const data = response.json();\n\n  return data;\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { getCategories } from '../services/api';\n\nclass Categories extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      categories: [],\n    };\n  }\n\n  async componentDidMount() {\n    const categories = await getCategories();\n    this.setCategoriesInState(categories);\n  }\n\n  setCategoriesInState(categories) {\n    this.setState({ categories });\n  }\n\n  render() {\n    const { categories } = this.state;\n    const { categoryChange } = this.props;\n\n    return (\n      <div className=\"categories\">\n        <span>Categorias:</span>\n        {\n          categories.map((category) => (\n            <div key={ category.id } className=\"categories-item\">\n              <label htmlFor={ category.id } data-testid=\"category\">\n                <input\n                  type=\"radio\"\n                  name=\"category\"\n                  id={ category.id }\n                  value={ category.id }\n                  onChange={ categoryChange }\n                />\n                &nbsp;\n                { category.name }\n              </label>\n            </div>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nCategories.propTypes = {\n  categoryChange: PropTypes.func.isRequired,\n};\n\nexport default Categories;\n","// Lida com enviar os Ids dos produtos para o localStorage\nexport function sendItemsToCloud(productId, categoryId) {\n  const cloudProductsIds = localStorage.getItem('CartIds');\n  let productsIds = [];\n\n  if (cloudProductsIds) {\n    productsIds = JSON.parse(cloudProductsIds);\n  }\n\n  productsIds.push({ productId, categoryId });\n  const stringProducts = JSON.stringify(productsIds);\n\n  localStorage.setItem('CartIds', stringProducts);\n}\n\n// Lida com resgatar os ids dos produtos do localStorage\nexport function getItemsFromCloud() {\n  const cloudProductsIds = localStorage.getItem('CartIds');\n\n  if (cloudProductsIds) {\n    return JSON.parse(cloudProductsIds);\n  }\n\n  return [];\n}\n\nexport function removeProduct(id) {\n  const cloudProdutsList = localStorage.getItem('CartIds');\n  const productList = JSON.parse(cloudProdutsList);\n\n  const filtredList = productList.filter(({ productId }) => productId !== id);\n\n  localStorage.setItem('CartIds', JSON.stringify(filtredList));\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\nimport { sendItemsToCloud } from '../services/cart';\n\nclass ProductCard extends React.Component {\n  sendToCart = () => {\n    const {\n      productId,\n      categoryId,\n    } = this.props;\n    sendItemsToCloud(productId, categoryId);\n  }\n\n  render() {\n    const {\n      thumbnail,\n      productId,\n      categoryId,\n      title,\n      price,\n      shipping,\n    } = this.props;\n\n    return (\n      <>\n        <Link\n          to={ `/detailedproductview/${categoryId}/${productId}` }\n          data-testid=\"product-detail-link\"\n        >\n          {(shipping) && (\n            <span data-testid=\"free-shipping\">\n              Frete Grátis!\n            </span>\n          )}\n          <img\n            src={ thumbnail }\n            alt={ productId }\n          />\n          <span>\n            {title}\n          </span>\n          <span>\n            {`R$ ${price}`}\n          </span>\n        </Link>\n        <button\n          type=\"button\"\n          onClick={ this.sendToCart }\n          data-testid=\"product-add-to-cart\"\n        >\n          Eu quero!\n        </button>\n      </>\n    );\n  }\n}\n\nProductCard.propTypes = ({\n  thumbnail: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  productId: PropTypes.string.isRequired,\n  categoryId: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  shipping: PropTypes.bool.isRequired,\n});\n\nexport default ProductCard;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ProductCard from '../components/ProductCard';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      productsList: [],\n      inputSearch: '',\n      showResults: false,\n      category: '',\n    };\n  }\n\n  categoryChange = ({ target }) => {\n    this.setState({\n      category: target.value,\n    }, this.handleSearch);\n  }\n\n  onInputChange = ({ target }) => {\n    this.setState({ inputSearch: target.value });\n  }\n\n  // busca produto de acordo com categoria e query\n  handleSearch = async () => {\n    const { inputSearch, category } = this.state;\n    const products = await\n    getProductsFromCategoryAndQuery(category, inputSearch);\n\n    this.setState({\n      productsList: products,\n      showResults: true,\n    });\n  }\n\n  // mostra resultado da busca\n  handleProducts = () => {\n    const { productsList } = this.state;\n    const { results } = productsList;\n\n    if (results.length === 0) {\n      return <span>Nenhum produto foi encontrado</span>;\n    }\n\n    return results.map((product) => (\n      <div\n        key={ product.id }\n        data-testid=\"product\"\n      >\n        <ProductCard\n          thumbnail={ product.thumbnail }\n          productId={ product.id }\n          categoryId={ product.category_id }\n          title={ product.title }\n          price={ product.price }\n          shipping={ product.shipping.free_shipping }\n        />\n      </div>\n    ));\n  }\n\n  render() {\n    const {\n      inputSearch,\n      showResults,\n    } = this.state;\n\n    return (\n      <div className=\"home-layout\">\n        <Categories\n          categoryChange={ this.categoryChange }\n        />\n\n        <div>\n          <div className=\"d-flex jc-end\">\n            <Link className=\"cart\" data-testid=\"shopping-cart-button\" to=\"/shoppingcart\">\n              Carrinho de compras\n              <span role=\"img\" aria-label=\"Carrinho de compras\">&#128722;</span>\n            </Link>\n          </div>\n          <p data-testid=\"home-initial-message\">\n            Digite algum termo de pesquisa ou escolha uma categoria.\n          </p>\n          <form className=\"d-flex\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              data-testid=\"query-input\"\n              value={ inputSearch }\n              onChange={ this.onInputChange }\n            />\n            <button\n              className=\"search-button\"\n              type=\"submit\"\n              data-testid=\"query-button\"\n              onClick={ (event) => {\n                event.preventDefault();\n                this.handleSearch();\n              } }\n            >\n              <span role=\"img\" aria-label=\"Pesquisar\">&#128270;</span>\n            </button>\n          </form>\n\n          {showResults && this.handleProducts()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { removeProduct } from '../services/cart';\n\nclass CartCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalValue: 0,\n      quantityOfProduct: props.quantityOfThis,\n    };\n  }\n\n  componentDidMount() {\n    this.totalAmount();\n  }\n\n  totalAmount = () => {\n    const { quantityOfProduct } = this.state;\n    const {\n      price,\n      id,\n      changeTotalPrice,\n    } = this.props;\n\n    const total = price * Number(quantityOfProduct);\n\n    this.setState({\n      totalValue: total,\n    }, () => { changeTotalPrice(id, total); });\n  }\n\n  decreaseCartQuantity = () => {\n    const { quantityOfProduct } = this.state;\n\n    if (quantityOfProduct < 1) {\n      this.setState({ quantityOfProduct: 1 });\n    }\n\n    this.setState((prevState) => ({\n      quantityOfProduct: prevState.quantityOfProduct - 1,\n    }), this.totalAmount);\n  }\n\n  increaseCartQuantity = () => {\n    const { maxQuantity } = this.props;\n    const { quantityOfProduct } = this.state;\n    if (quantityOfProduct + 1 <= maxQuantity) {\n      this.setState((prevState) => ({\n        quantityOfProduct: prevState.quantityOfProduct + 1,\n      }), this.totalAmount);\n    }\n  }\n\n  emptyCart = () => {\n    const {\n      id,\n    } = this.props;\n    removeProduct(id);\n    window.location.reload();\n  }\n\n  render() {\n    const {\n      title,\n      price,\n    } = this.props;\n\n    const {\n      quantityOfProduct,\n      totalValue,\n    } = this.state;\n\n    return (\n      <div>\n        <div>\n          <span data-testid=\"shopping-cart-product-name\">\n            {title}\n          </span>\n          <span>\n            {price}\n          </span>\n        </div>\n        <div>\n          <button\n            data-testid=\"product-decrease-quantity\"\n            type=\"button\"\n            onClick={ this.decreaseCartQuantity }\n          >\n            -\n          </button>\n          <span\n            data-testid=\"shopping-cart-product-quantity\"\n          >\n            { quantityOfProduct }\n          </span>\n          <button\n            data-testid=\"product-increase-quantity\"\n            type=\"button\"\n            onClick={ this.increaseCartQuantity }\n          >\n            +\n          </button>\n          <button\n            type=\"button\"\n            onClick={ this.emptyCart }\n          >\n            X\n          </button>\n          <div>\n            {/* mostra valor total por produto */}\n            { totalValue }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCartCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  quantityOfThis: PropTypes.number.isRequired,\n  maxQuantity: PropTypes.number.isRequired,\n  changeTotalPrice: PropTypes.func.isRequired,\n};\n\nexport default CartCard;\n","import React, { Component } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { getItemsFromCloud } from '../services/cart';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport CartCard from '../components/CartCard';\n\nclass ShoppingCart extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      productIds: [],\n      productsDetails: [],\n      productsToSum: [],\n      showResults: false,\n      finalPrice: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.handleCloudIds();\n  }\n\n  handleCloudIds = () => {\n    this.setState({\n      productIds: getItemsFromCloud(),\n      showResults: true,\n    }, this.handleItemsDetails);\n  };\n\n  // valor total da compra\n  sumTotalPrice = () => {\n    const { productsToSum } = this.state;\n\n    const sum = productsToSum.reduce((acc, item) => acc + item.value, 0);\n\n    this.setState({ finalPrice: sum });\n  }\n\n  changeTotalPrice = (id, value) => {\n    const { productsToSum } = this.state;\n\n    const attList = productsToSum.filter((product) => product.id !== id);\n    attList.push({ id, value });\n\n    this.setState({\n      productsToSum: attList,\n    }, this.sumTotalPrice);\n  }\n\n  handleItemsDetails = () => {\n    const {\n      productIds,\n      productsDetails,\n      productsToSum,\n    } = this.state;\n\n    productIds.forEach(async ({ productId, categoryId }) => {\n      const allProducts = await getProductsFromCategoryAndQuery(categoryId);\n      const product = allProducts.results.find(({ id }) => id === productId);\n      const details = {\n        id: product.id,\n        value: product.price,\n      };\n\n      productsToSum.push(details);\n      productsDetails.push(product);\n      product.quantityOfThis = 1;\n\n      this.setState({\n        productsDetails,\n        productsToSum,\n      }, this.sumTotalPrice);\n    });\n  }\n\n  handleCartList = () => {\n    const {\n      productIds,\n      productsDetails,\n      finalPrice,\n    } = this.state;\n\n    if (productIds.length === 0) {\n      return (\n        <p data-testid=\"shopping-cart-empty-message\">\n          Seu carrinho está vazio\n        </p>\n      );\n    }\n\n    return (\n      <>\n        <div>\n          <span>\n            {productsDetails.length}\n          </span>\n          {productsDetails.map((product) => {\n            const {\n              id,\n              title,\n              price,\n              quantityOfThis,\n            } = product;\n\n            return (\n              <CartCard\n                key={ id }\n                id={ id }\n                title={ title }\n                price={ price }\n                quantityOfThis={ quantityOfThis }\n                maxQuantity={ product.available_quantity }\n                changeTotalPrice={ this.changeTotalPrice }\n              />\n            );\n          })}\n          {/* valor total da compra */}\n          <p>Valor total da compra: </p>\n          {finalPrice}\n        </div>\n        <Link to=\"/shoppingcard/checkoutpage/\">\n          <button data-testid=\"checkout-products\" type=\"button\">\n            Finalizar compra\n          </button>\n        </Link>\n      </>\n    );\n  }\n\n  render() {\n    const {\n      showResults,\n    } = this.state;\n\n    return (\n      <div>\n        {(showResults) && this.handleCartList()}\n      </div>\n    );\n  }\n}\n\nexport default ShoppingCart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends React.Component {\n  render() {\n    const { maxRating, defaultValue, setRating } = this.props;\n    const ratingArray = [];\n\n    for (let i = 0; i < maxRating; i += 1) {\n      ratingArray.push(i + 1);\n    }\n\n    return (\n      <div>\n        {\n          ratingArray.map((rating) => (\n            <label key={ rating } htmlFor={ rating } className=\"rating-item\">\n              <input\n                id={ rating }\n                className=\"rating-radio\"\n                type=\"radio\"\n                name=\"rating\"\n                onChange={ (event) => {\n                  setRating(parseInt(event.target.value, 10));\n                } }\n                checked={ defaultValue === rating }\n                value={ rating }\n              />\n              &nbsp;\n              {rating}\n            </label>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nRating.propTypes = {\n  maxRating: PropTypes.number.isRequired,\n  defaultValue: PropTypes.number.isRequired,\n  setRating: PropTypes.func.isRequired,\n};\n\nexport default Rating;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass SavedAssessments extends React.Component {\n  render() {\n    const { match } = this.props;\n    const savedAssessments = (JSON.parse(localStorage.getItem('savedAssessments')) || [])\n      .filter((savedAssessment) => savedAssessment.id === match.params.id);\n\n    return (\n      <div>\n        {\n          savedAssessments.map((savedAssessment, index) => (\n            <div key={ index } className=\"saved-assessments\">\n              <div>\n                <span>E-mail: </span>\n                <span>{savedAssessment.email}</span>\n              </div>\n              <div>\n                <span>Nota: </span>\n                <span>{savedAssessment.rating}</span>\n              </div>\n              <div>\n                <span>Avaliação: </span>\n                <span>{savedAssessment.evaluation}</span>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nSavedAssessments.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default withRouter(SavedAssessments);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Rating from './Reating';\nimport SavedAssessments from './SavedAssessments';\n\nclass Evaluation extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      rating: 5,\n      evaluation: '',\n    };\n  }\n\n  saveEvaluation() {\n    const {\n      email,\n      rating,\n      evaluation,\n    } = this.state;\n    const { match } = this.props;\n\n    const savedAssessments = JSON.parse(localStorage.getItem('savedAssessments')) || [];\n    savedAssessments.unshift({ id: match.params.id, email, rating, evaluation });\n    localStorage.setItem('savedAssessments', JSON.stringify(savedAssessments));\n    this.setState({\n      email: '',\n      rating: 5,\n      evaluation: '',\n    });\n  }\n\n  render() {\n    const {\n      email,\n      rating,\n      evaluation,\n    } = this.state;\n\n    return (\n      <div>\n        <h3>Avaliações</h3>\n        <br />\n        <form className=\"reating-border\">\n          <input\n            onChange={ (event) => {\n              this.setState({\n                email: event.target.value,\n              });\n            } }\n            value={ email }\n            className=\"form-control \"\n            type=\"email\"\n            placeholder=\"Digite seu e-mail\"\n          />\n          <br />\n          <br />\n          <Rating\n            maxRating={ 5 }\n            defaultValue={ rating }\n            setRating={ (selectedRating) => {\n              this.setState({ rating: selectedRating });\n            } }\n          />\n          <br />\n          <textarea\n            onChange={ (event) => {\n              this.setState({\n                evaluation: event.target.value,\n              });\n            } }\n            value={ evaluation }\n            className=\"form-textarea\"\n            data-testid=\"product-detail-evaluation\"\n          />\n          <br />\n          <br />\n          <div className=\"d-flex jc-end\">\n            <button\n              type=\"submit\"\n              className=\"btn\"\n              onClick={ (event) => {\n                event.preventDefault();\n                this.saveEvaluation();\n              } }\n            >\n              Enviar avaliação\n\n            </button>\n          </div>\n        </form>\n\n        <SavedAssessments />\n      </div>\n    );\n  }\n}\n\nEvaluation.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default withRouter(Evaluation);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport Evaluation from '../components/Evaluation';\nimport { sendItemsToCloud } from '../services/cart';\n\nclass DetailedProductView extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      thumbnail: '',\n      price: 0,\n      availableQuantity: 0,\n      condition: '',\n      categoryId: '',\n      id: '',\n      shipping: false,\n    };\n  }\n\n  componentDidMount() {\n    const { match: { params: { id, categoryId } } } = this.props;\n    this.handleAPI(categoryId, id);\n  }\n\n  handleAPI = async (categoryId, id) => {\n    const detail = await getProductsFromCategoryAndQuery(categoryId);\n    const product = detail.results.find((item) => item.id === id);\n    this.setState({\n      title: product.title,\n      thumbnail: product.thumbnail,\n      price: product.price,\n      availableQuantity: product.available_quantity,\n      condition: product.condition,\n      shipping: product.shipping.free_shipping,\n      categoryId,\n      id,\n    });\n  }\n\n  sendToCart = () => {\n    const { categoryId, id } = this.state;\n\n    sendItemsToCloud(id, categoryId);\n  }\n\n  render() {\n    const {\n      title,\n      thumbnail,\n      price,\n      availableQuantity,\n      condition,\n      shipping,\n    } = this.state;\n\n    return (\n      <div className=\"p-10\">\n        <h3 data-testid=\"product-detail-name\">{title}</h3>\n        <div>\n          <Link className=\"cart\" data-testid=\"shopping-cart-button\" to=\"/shoppingcart\">\n            Carrinho de compras\n            <span role=\"img\" aria-label=\"Carrinho de compras\">&#128722;</span>\n          </Link>\n          {(shipping) && (\n            <span data-testid=\"free-shipping\">\n              Frete Grátis!\n            </span>\n          )}\n          <img src={ thumbnail } alt={ title } />\n          <h3>{`R$ ${price}`}</h3>\n          <h4>Especificações: </h4>\n          <p>\n            {`Quantidade disponível: ${availableQuantity}`}\n            &nbsp;|&nbsp;\n            {`Condição do produto: ${condition}`}\n          </p>\n\n          <br />\n          <br />\n\n          <button\n            type=\"button\"\n            data-testid=\"product-detail-add-to-cart\"\n            onClick={ this.sendToCart }\n          >\n            Adicionar Ao Carrinho\n          </button>\n\n          <br />\n          <br />\n\n          <Evaluation />\n        </div>\n      </div>\n    );\n  }\n}\n\nDetailedProductView.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      categoryId: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default DetailedProductView;\n","import React, { Component } from 'react';\nimport { getItemsFromCloud } from '../services/cart';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport '../css-pages/checkoutPage.css';\n\nclass CheckoutPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      thumbnail: '',\n      price: 0,\n      id: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getId();\n  }\n\n  getId = async () => {\n    const storageIds = await getItemsFromCloud();\n    storageIds.filter(async (item) => {\n      const detail = await getProductsFromCategoryAndQuery(item.categoryId);\n      const product = detail.results.find((elem) => elem.id === item.productId);\n      this.setState({\n        title: product.title,\n        thumbnail: product.thumbnail,\n        price: product.price,\n        id: item.productId,\n      });\n    });\n  }\n\n  render() {\n    const {\n      title,\n      thumbnail,\n      price,\n      id,\n    } = this.state;\n    return (\n      <form className=\"container\">\n        <fieldset>\n          <h4>Revise seus Produtos</h4>\n          <section className=\"review-products\">\n            <img\n              src={ thumbnail }\n              alt={ id }\n            />\n            <span>\n              {title}\n            </span>\n            <span>\n              {`R$ ${price}`}\n            </span>\n          </section>\n        </fieldset>\n        <fieldset className=\"fieldset-form\">\n          <section className=\"form-info\">\n            <label htmlFor=\"fullname\">\n              Name:\n              <input\n                id=\"fullname\"\n                type=\"text\"\n                data-testid=\"checkout-fullname\"\n              />\n            </label>\n\n            <label htmlFor=\"email\">\n              Email:\n              <input\n                id=\"email\"\n                type=\"email\"\n                data-testid=\"checkout-email\"\n              />\n            </label>\n\n            <label htmlFor=\"cpf\">\n              CPF:\n              <input\n                id=\"cpf\"\n                type=\"text\"\n                data-testid=\"checkout-cpf\"\n              />\n            </label>\n\n            <label htmlFor=\"phone\">\n              Phone number:\n              <input\n                id=\"phone\"\n                type=\"text\"\n                data-testid=\"checkout-phone\"\n              />\n            </label>\n\n            <label htmlFor=\"cep\">\n              CEP:\n              <input\n                id=\"cep\"\n                type=\"text\"\n                data-testid=\"checkout-cep\"\n              />\n            </label>\n\n            <label htmlFor=\"address\">\n              Address:\n              <input\n                id=\"address\"\n                type=\"text\"\n                data-testid=\"checkout-address\"\n              />\n            </label>\n\n          </section>\n          <button type=\"submit\">\n            Finalizar\n          </button>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nexport default CheckoutPage;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport ShoppingCart from './pages/ShoppingCart';\nimport DetailedProductView from './pages/DetailedProductView';\nimport CheckoutPage from './pages/CheckoutPage';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter basename={ process.env.PUBLIC_URL }>\n        <Switch>\n          <Route\n            exact\n            path=\"/detailedproductview/:categoryId/:id\"\n            component={ DetailedProductView }\n          />\n          <Route exact path=\"/shoppingcart\" component={ ShoppingCart } />\n          <Route exact path=\"/\" component={ Home } />\n          <Route exact path=\"/shoppingcard/checkoutpage/\" component={ CheckoutPage } />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}